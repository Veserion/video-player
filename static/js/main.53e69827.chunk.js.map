{"version":3,"sources":["components/EventList/Event.tsx","components/EventList/index.tsx","components/GreenRectangle/index.tsx","components/App/index.tsx","stores/DataStore.ts","stores/SubStore.ts","index.tsx","stores/RootStore.ts"],"names":["Event","time","Date","props","item","timestamp","Root","onClick","handleSeek","this","id","getMinutes","getSeconds","getMilliseconds","duration","React","Component","styled","div","EventList","inject","observer","items","dataStore","length","Title","sort","a","b","map","key","type","color","height","width","TableHeader","RootTableHeader","GreenRectangle","currentItems","filter","Math","ceil","Rectangle","css","zone","top","left","console","log","App","player","sec","seekTo","handleProgress","progress","playedSeconds","ref","url","playing","progressInterval","onProgress","controls","observable","DataStore","rootStore","syncItems","action","fetch","then","response","json","mobXStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.53e69827.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport styled from '@emotion/styled'\nimport { IItem } from '../../stores/DataStore'\n\ninterface IProps {\n    item: IItem\n    handleSeek: (sec: number) => void\n}\n\nexport default class Event extends React.Component<IProps, {}> {\n    time = new Date(+this.props.item.timestamp)\n    render() {\n        return <Root onClick={() => this.props.handleSeek(this.props.item.timestamp)}>\n            <div>{this.props.item.id}</div>\n            <div>{`${this.time.getMinutes()}:${this.time.getSeconds()}:${this.time.getMilliseconds()}`}</div>\n            <div>{this.props.item.duration}</div>\n        </Root>\n    }\n}\n\nconst Root = styled.div`\nmargin-left: 10px;\ndisplay: flex;\njustify-content: flex-start;\ncursor: pointer;\n> div {\n    flex: 1;\n    display: flex;\n    align-items: center;\n    border: 1px solid #9D998E;\n    padding-left: 5px;\n}\n`","import React, { Component } from 'react'\nimport styled from '@emotion/styled'\nimport Loader from 'react-loader-spinner'\nimport { DataStore } from '../../stores/DataStore'\nimport { observer, inject } from 'mobx-react'\nimport Event from './Event'\n\ninterface IProps {\n    dataStore?: DataStore\n    handleSeek: (sec: number) => void\n}\n\n@inject('dataStore')\n@observer\nexport default class EventList extends Component<IProps, {}>{\n    render() {\n        const items = this.props.dataStore!.items\n        return items && items.length\n            ? <Root>\n                <Title>Список аналитики</Title>\n                <TableHeader />\n                {items!.sort((a, b) => a.timestamp - b.timestamp)\n                .map((item, key) => <Event key={key} item={item} handleSeek={this.props.handleSeek}/>)}\n            </Root>\n            : <Loader\n                type=\"Puff\"\n                color=\"#00BFFF\"\n                height={100}\n                width={100}\n            />\n\n    }\n}\n\n\nconst Root = styled.div`\nflex: 1;\nmargin-right: 10px;\n> div {\n    border-left: 1px solid #9D998E;\n    border-right: 1px solid #9D998E;\n}\n> div:nth-child(2){\n    border-radius: 3px 3px 0 0;\n    border-top: 1px solid #9D998E;\n}\n> div:last-child{\n    border-radius: 0 0 3px 3px;\n    border-bottom: 1px solid #9D998E;\n}\n`\nconst Title = styled.div`\nfont-family: sans-serif;\nfont-size: 20px;\nmargin: 10px;\nborder: none !important;\n`\nclass TableHeader extends React.Component {\n    render() {\n        return <RootTableHeader>\n            <div>Id</div>\n            <div>Timestamp</div>\n            <div>Duration</div>\n        </RootTableHeader>\n    }\n}\n\n\nconst RootTableHeader = styled.div`\nmargin-left: 10px;\ndisplay: flex;\njustify-content: flex-start;\n> div {\n    flex: 1;\n    display: flex;\n    align-items: center;\n    border: 1px solid #9D998E;\n    padding: 3px 0 3px 5px;\n    font-size: 18px;\n}\n`","/**@jsx jsx*/\nimport { css, jsx } from '@emotion/core'\nimport React from 'react'\nimport styled from '@emotion/styled'\nimport { DataStore } from '../../stores/DataStore'\nimport { observer, inject } from 'mobx-react'\n\n\ninterface IProps {\n    timestamp: number\n    dataStore?: DataStore\n}\n\n@inject('dataStore')\n@observer\nexport default class GreenRectangle extends React.Component<IProps, {}> {\n    render() {\n        const items = this.props.dataStore!.items.sort((a, b) => a.timestamp - b.timestamp)\n        const currentItems = items.filter(item => (Math.ceil(this.props.timestamp * 1000) > item.timestamp) &&\n            (Math.ceil(this.props.timestamp * 1000) < (item.timestamp + item.duration)))\n        return items && items.length\n            ? <div>\n                {currentItems.map((item, key) => <Rectangle key={key}\n                    css={css`top: ${item.zone.top}px; \n                left: ${item.zone.left}px;\n                width: ${item.zone.width}px;\n                height: ${item.zone.height}px;`}\n                />)}\n                {\n                    console.log(currentItems.length)\n                }\n            </div>\n            : null\n    }\n}\n\nconst Rectangle = styled.div`\nposition: absolute;\nbackground: linear-gradient(to top right, lightgreen, darkgreen);\n`","/**@jsx jsx*/\nimport { css, jsx } from '@emotion/core'\nimport React from 'react'\nimport ReactPlayer from 'react-player'\nimport styled from '@emotion/styled'\nimport EventList from '../EventList'\nimport { observable } from 'mobx'\nimport { observer } from 'mobx-react'\nimport GreenRectangle from '../GreenRectangle'\n\ninterface IProgress {\n  played: number\n  playedSeconds: number\n  loaded: number\n  loadedSeconds: number\n}\n\n@observer\nexport default class App extends React.Component {\n  player: any;\n\n  @observable\n  timestamp: number = 0\n\n  handleSeek = (sec: number) => {\n    this.player.seekTo(sec / 1000)\n  }\n  handleProgress = (progress: IProgress) => {\n    this.timestamp = progress.playedSeconds\n  }\n\n  ref = (player: any) => {\n    this.player = player\n  }\n\n  render() {\n    return <Root>\n      <ReactPlayer\n        url='http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4'\n        ref={this.ref}\n        playing={false}\n        progressInterval={100}\n        onProgress={this.handleProgress}\n        controls\n        css={css`margin-top: 10px; margin-left: 10px;`}\n      />\n      <GreenRectangle timestamp={this.timestamp} />\n      <EventList handleSeek={this.handleSeek} css={css`margin-right: 10px !important;`}/>\n    </Root>\n  }\n}\n\n\nconst Root = styled.div`\nwidth: 100vw;\ndisplay: flex;\n`\n","import { RootStore } from \"./index\";\nimport { SubStore } from \"./SubStore\";\nimport { action, observable } from \"mobx\";\n\nexport interface IItem {\n  id: number;\n  timestamp: number;\n  duration: number;\n  zone: {\n    left: number;\n    top: number;\n    width: number;\n    height: number;\n  };\n}\n\nexport class DataStore extends SubStore {\n  @observable items: IItem[] = [];\n  \n  constructor(rootStore: RootStore) {\n    super(rootStore);\n    this.syncItems();\n  }\n\n  @action syncItems = async () => {\n    this.items = (await fetch(\"https://cors-anywhere.herokuapp.com/http://www.mocky.io/v2/5e60c5f53300005fcc97bbdd\").then(response => response.json())) as IItem[];\n  };\n}\n","import { RootStore } from './index';\n\nclass SubStore {\n    constructor(public rootStore: RootStore) {}\n}\n\nexport {\n    SubStore\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport { autorun } from 'mobx';\nimport { RootStore } from './stores';\nimport { Provider } from 'mobx-react';\n\nconst mobXStore = new RootStore();\n\nReactDOM.render(<Provider {...mobXStore}>\n    <App />\n</Provider>, document.getElementById('root'));\n","import { DataStore } from \"./index\";\n\nclass RootStore {\n  public dataStore: DataStore;\n  constructor() {\n    this.dataStore = new DataStore(\n      this\n    );\n  }\n}\n\nexport { RootStore };\n"],"sourceRoot":""}